name: NPM发布

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: '版本更新类型 (patch, minor, major)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
  release:
    types: [created]

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: 设置Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
      
      - name: 安装依赖
        run: npm ci
      
      - name: 更新版本号
        if: github.event_name == 'workflow_dispatch'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # 确保工作目录干净
          git status
          
          # 暂存所有改动
          git add .
          git commit -m "构建前提交" || echo "没有改动需要提交"
          
          # 获取当前版本并计算下一个版本
          VERSION_TYPE="${{ github.event.inputs.version_type }}"
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "当前版本: $CURRENT_VERSION"
          
          # 检查标签是否已存在并更新版本
          if [ "$VERSION_TYPE" = "patch" ]; then
            npm --no-git-tag-version version patch
          elif [ "$VERSION_TYPE" = "minor" ]; then
            npm --no-git-tag-version version minor
          else
            npm --no-git-tag-version version major
          fi
          
          # 获取新版本
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "新版本: $NEW_VERSION"
          
          # 提交版本更新
          git add package.json
          git commit -m "v$NEW_VERSION"
          git tag -a "v$NEW_VERSION" -m "v$NEW_VERSION"
          
          # 推送代码和标签
          git push
          git push --tags
      
      - name: 构建项目
        run: npm run build
      
      - name: 登录到NPM
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
          npm whoami || echo "NPM 登录失败，但继续执行"
      
      - name: 发布到NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} 